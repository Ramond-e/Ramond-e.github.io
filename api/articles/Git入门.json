{"title":"Git入门：从小白到版本控制大师的奇妙旅程","uid":"4394a0ba4f4ad044c121b2a55f4478fa","slug":"Git入门","date":"2025-08-28T01:00:00.000Z","updated":"2025-08-29T12:39:45.777Z","comments":true,"path":"api/articles/Git入门.json","keywords":null,"cover":"/img/blog_covers/basic_tech.jpg","content":"<h1 id=\"嘿，准备好和Git交朋友了吗？\"><a href=\"#嘿，准备好和Git交朋友了吗？\" class=\"headerlink\" title=\"嘿，准备好和Git交朋友了吗？\"></a>嘿，准备好和Git交朋友了吗？</h1><p>亲爱的朋友们！👋</p>\n<p>还记得你第一次听说Git的时候吗？是不是和我一样，脑海里浮现出一堆问号：”Git是什么？为什么程序员都在说它？听起来好像很复杂的样子…” 😵</p>\n<p>别担心！今天我要用最有趣、最接地气的方式，带你走进Git的世界。相信我，学完这篇文章后，你不仅会爱上Git，还会感叹：”哇，原来版本控制可以这么简单！”</p>\n<span id=\"more\"></span>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">写在前面</p>\n<p>这篇文章专门为0基础的朋友们准备，专注于Git的核心概念和实用操作技巧。</p>\n</div>\n<h2 id=\"什么是Git？一个改变世界的故事\"><a href=\"#什么是Git？一个改变世界的故事\" class=\"headerlink\" title=\"什么是Git？一个改变世界的故事\"></a>什么是Git？一个改变世界的故事</h2><h3 id=\"从一个程序员的烦恼说起\"><a href=\"#从一个程序员的烦恼说起\" class=\"headerlink\" title=\"从一个程序员的烦恼说起\"></a>从一个程序员的烦恼说起</h3><p>想象一下这个场景：</p>\n<p>小明正在写一个项目，代码写了一半，突然想尝试一个新功能。但他担心新功能搞砸了整个项目，于是他把整个文件夹复制了一份，命名为”项目_备份”。</p>\n<p>过了几天，他又有了新想法，于是又复制了一份：”项目_备份_新功能”。</p>\n<p>再过几天：”项目_最终版”、”项目_真正的最终版”、”项目_这次真的是最终版”…</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">这样的场景熟悉吗？</p>\n<p>如果你也有过这样的经历，恭喜你！你已经有了版本控制的意识，只是方法还比较原始。Git就是来拯救你的！</p>\n</div>\n<p>听起来是不是很熟悉？😂 这就是没有版本控制工具时程序员的日常！</p>\n<h3 id=\"Git的诞生：Linus的神来之笔\"><a href=\"#Git的诞生：Linus的神来之笔\" class=\"headerlink\" title=\"Git的诞生：Linus的神来之笔\"></a>Git的诞生：Linus的神来之笔</h3><p>2005年，Linux之父Linus Torvalds遇到了一个问题：当时用的版本控制工具不好用了，但市面上又没有合适的替代品。</p>\n<p>于是，这位大神说：”既然没有，那我就自己写一个！”</p>\n<p>仅仅用了<strong>10天时间</strong>，Git就诞生了！是的，你没听错，就是10天！这就是天才的力量 🚀</p>\n<details class=\"custom-details\">\n<summary>有趣的Git名字由来</summary>\n<p>你知道”Git”这个名字是怎么来的吗？Linus Torvalds说这是一个”愚蠢的内容跟踪器”（stupid content tracker），而”git”在英国俚语中有”愚蠢的人”的意思。但后来这个名字被重新定义为”全局信息跟踪器”（Global Information Tracker）。看，连大神都有幽默感！</p>\n</details>\n<h3 id=\"Git到底是什么？\"><a href=\"#Git到底是什么？\" class=\"headerlink\" title=\"Git到底是什么？\"></a>Git到底是什么？</h3><p>简单来说，Git是一个<strong>分布式版本控制系统</strong>。</p>\n<p>听起来很高大上？让我用人话解释：</p>\n<p>Git就像是你项目的”时光机” + “平行宇宙管理器”！</p>\n<ul>\n<li><strong>时光机</strong>：可以让你回到项目的任何一个历史状态</li>\n<li><strong>平行宇宙管理器</strong>：可以让你同时维护项目的多个版本（分支）</li>\n</ul>\n<h2 id=\"为什么要学Git？让数据说话\"><a href=\"#为什么要学Git？让数据说话\" class=\"headerlink\" title=\"为什么要学Git？让数据说话\"></a>为什么要学Git？让数据说话</h2><p>在开始学习之前，让我告诉你几个震撼的数据：</p>\n<ul>\n<li>🌟 GitHub上有超过<strong>1亿</strong>个仓库使用Git</li>\n<li>💼 <strong>90%+</strong> 的科技公司都在使用Git</li>\n<li>📈 掌握Git的程序员平均薪资比不掌握的高<strong>20%</strong></li>\n<li>🏆 Git被评为程序员必备技能<strong>TOP 3</strong></li>\n</ul>\n<p><strong>职场小贴士</strong>：在现代软件开发中，不会Git就像是医生不会用听诊器一样！几乎所有的技术岗位面试都会问到Git相关问题。</p>\n<p>所以，学Git不是选择题，是必选题！</p>\n<h2 id=\"Git基础概念：先搞懂这些”黑话”\"><a href=\"#Git基础概念：先搞懂这些”黑话”\" class=\"headerlink\" title=\"Git基础概念：先搞懂这些”黑话”\"></a>Git基础概念：先搞懂这些”黑话”</h2><h3 id=\"仓库（Repository）-你的项目大本营\"><a href=\"#仓库（Repository）-你的项目大本营\" class=\"headerlink\" title=\"仓库（Repository）- 你的项目大本营\"></a>仓库（Repository）- 你的项目大本营</h3><p>仓库就是存放你项目的地方，可以理解为一个”超级文件夹”。</p>\n<ul>\n<li><strong>本地仓库</strong>：在你电脑上的仓库</li>\n<li><strong>远程仓库</strong>：在服务器上的仓库（比如GitHub、GitLab）</li>\n</ul>\n<h3 id=\"提交（Commit）-给项目拍快照\"><a href=\"#提交（Commit）-给项目拍快照\" class=\"headerlink\" title=\"提交（Commit）- 给项目拍快照\"></a>提交（Commit）- 给项目拍快照</h3><p>每次提交就像给你的项目拍了一张快照，记录下当前的状态。</p>\n<p>每个提交都有：</p>\n<ul>\n<li>一个唯一的ID（SHA-1哈希值）</li>\n<li>提交消息（描述你做了什么）</li>\n<li>时间戳</li>\n<li>作者信息</li>\n</ul>\n<h3 id=\"分支（Branch）-平行宇宙\"><a href=\"#分支（Branch）-平行宇宙\" class=\"headerlink\" title=\"分支（Branch）- 平行宇宙\"></a>分支（Branch）- 平行宇宙</h3><p>分支让你可以在不影响主线开发的情况下，尝试新功能。</p>\n<p>想象一下：</p>\n<ul>\n<li><strong>主分支（main）</strong>：稳定的主线剧情</li>\n<li><strong>功能分支（feature）</strong>：平行宇宙的实验剧情</li>\n</ul>\n<p><strong>分支的妙用</strong>：就像小说的不同结局一样，你可以在不同的分支上尝试不同的方案，最终选择最好的那个合并回主线！</p>\n<h3 id=\"合并（Merge）-平行宇宙的融合\"><a href=\"#合并（Merge）-平行宇宙的融合\" class=\"headerlink\" title=\"合并（Merge）- 平行宇宙的融合\"></a>合并（Merge）- 平行宇宙的融合</h3><p>当你在分支上的实验成功了，就可以把它合并回主分支。</p>\n<h2 id=\"Git安装：让我们开始这场冒险\"><a href=\"#Git安装：让我们开始这场冒险\" class=\"headerlink\" title=\"Git安装：让我们开始这场冒险\"></a>Git安装：让我们开始这场冒险</h2><h3 id=\"Windows用户\"><a href=\"#Windows用户\" class=\"headerlink\" title=\"Windows用户\"></a>Windows用户</h3><ol>\n<li>访问 <a href=\"https://git-scm.com/\">git-scm.com</a></li>\n<li>下载Windows版本</li>\n<li>一路下一步安装（默认设置就很好）</li>\n<li>安装完成后，右键任意文件夹，看到”Git Bash Here”就成功了！</li>\n</ol>\n<p><strong>安装注意事项</strong>：</p>\n<ul>\n<li>推荐选择”Git Bash Here”和”Git GUI Here”选项</li>\n<li>编辑器建议选择你熟悉的，新手可以选择默认的Vim或者Notepad++</li>\n<li>换行符处理选择”Checkout Windows-style, commit Unix-style line endings”</li>\n</ul>\n<h3 id=\"Mac用户\"><a href=\"#Mac用户\" class=\"headerlink\" title=\"Mac用户\"></a>Mac用户</h3><p>最简单的方式：</p>\n<p>如果你有Homebrew：<code>brew install git</code></p>\n<p>或者直接从官网下载安装包</p>\n<h3 id=\"Linux用户\"><a href=\"#Linux用户\" class=\"headerlink\" title=\"Linux用户\"></a>Linux用户</h3><p>Ubuntu&#x2F;Debian：<code>sudo apt-get install git</code><br>CentOS&#x2F;RHEL：<code>sudo yum install git</code> 或 <code>sudo dnf install git</code></p>\n<h3 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h3><p>打开终端（Windows用户打开Git Bash），输入：</p>\n<p><code>git --version</code></p>\n<p>看到版本号就说明安装成功了！🎉</p>\n<h2 id=\"第一次配置：告诉Git你是谁\"><a href=\"#第一次配置：告诉Git你是谁\" class=\"headerlink\" title=\"第一次配置：告诉Git你是谁\"></a>第一次配置：告诉Git你是谁</h2><p>在开始使用Git之前，需要告诉它你的身份信息：</p>\n<p>设置用户名：<code>git config --global user.name &quot;你的名字&quot;</code><br>设置邮箱：<code>git config --global user.email &quot;你的邮箱@example.com&quot;</code><br>查看配置：<code>git config --list</code></p>\n<p><strong>小贴士</strong>：这个邮箱最好和你的GitHub邮箱保持一致哦！这样你的提交就能正确关联到你的GitHub账号。</p>\n<h2 id=\"创建你的第一个Git仓库\"><a href=\"#创建你的第一个Git仓库\" class=\"headerlink\" title=\"创建你的第一个Git仓库\"></a>创建你的第一个Git仓库</h2><h3 id=\"方法一：从零开始\"><a href=\"#方法一：从零开始\" class=\"headerlink\" title=\"方法一：从零开始\"></a>方法一：从零开始</h3><p>创建一个新文件夹：<code>mkdir my-first-repo</code><br>进入文件夹：<code>cd my-first-repo</code><br>初始化Git仓库：<code>git init</code><br>看看发生了什么：<code>ls -la</code></p>\n<p>你会发现多了一个<code>.git</code>文件夹，这就是Git的”魔法盒子”！</p>\n<details class=\"custom-details\">\n<summary>Git的魔法盒子里有什么？</summary>\n<p><code>.git</code>文件夹包含了所有的版本历史、分支信息、配置等。千万不要手动删除这个文件夹，否则你的版本历史就全没了！</p>\n</details>\n<h3 id=\"方法二：克隆现有仓库\"><a href=\"#方法二：克隆现有仓库\" class=\"headerlink\" title=\"方法二：克隆现有仓库\"></a>方法二：克隆现有仓库</h3><p>克隆一个远程仓库：<code>git clone https://github.com/用户名/仓库名.git</code></p>\n<h2 id=\"Git工作流：理解这个很重要！\"><a href=\"#Git工作流：理解这个很重要！\" class=\"headerlink\" title=\"Git工作流：理解这个很重要！\"></a>Git工作流：理解这个很重要！</h2><p>Git有四个重要的区域：</p>\n<table>\n<thead>\n<tr>\n<th>区域</th>\n<th>说明</th>\n<th>常用操作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>工作目录（Working Directory）</td>\n<td>你正在编辑的文件所在的地方</td>\n<td>编辑文件</td>\n</tr>\n<tr>\n<td>暂存区（Staging Area）</td>\n<td>准备提交的文件的”候车室”</td>\n<td><code>git add</code></td>\n</tr>\n<tr>\n<td>本地仓库（Local Repository）</td>\n<td>你电脑上的Git仓库</td>\n<td><code>git commit</code></td>\n</tr>\n<tr>\n<td>远程仓库（Remote Repository）</td>\n<td>服务器上的Git仓库</td>\n<td><code>git push</code></td>\n</tr>\n</tbody></table>\n<p><strong>工作流程</strong>：工作目录 → 暂存区 → 本地仓库 → 远程仓库</p>\n<h2 id=\"基本操作：Git的”九阳神功”\"><a href=\"#基本操作：Git的”九阳神功”\" class=\"headerlink\" title=\"基本操作：Git的”九阳神功”\"></a>基本操作：Git的”九阳神功”</h2><h3 id=\"1-查看状态-git-status\"><a href=\"#1-查看状态-git-status\" class=\"headerlink\" title=\"1. 查看状态 - git status\"></a>1. 查看状态 - git status</h3><p><code>git status</code></p>\n<p>这是你最常用的命令，告诉你当前仓库的状态。就像医生的听诊器，随时了解”患者”的状况！</p>\n<h3 id=\"2-添加文件到暂存区-git-add\"><a href=\"#2-添加文件到暂存区-git-add\" class=\"headerlink\" title=\"2. 添加文件到暂存区 - git add\"></a>2. 添加文件到暂存区 - git add</h3><p>添加单个文件：<code>git add 文件名</code><br>添加所有文件：<code>git add .</code><br>添加所有.js文件：<code>git add *.js</code></p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><code>git add .</code> 会添加当前目录下的所有文件，包括你可能不想提交的文件。建议新手先用 <code>git status</code> 查看状态，再有选择性地添加文件。</p>\n</div>\n<h3 id=\"3-提交更改-git-commit\"><a href=\"#3-提交更改-git-commit\" class=\"headerlink\" title=\"3. 提交更改 - git commit\"></a>3. 提交更改 - git commit</h3><p>提交并添加消息：<code>git commit -m &quot;你的提交消息&quot;</code><br>提交并打开编辑器写详细消息：<code>git commit</code></p>\n<p><strong>好的提交消息示例</strong></p>\n<ul>\n<li>✅ “添加用户注册功能”</li>\n<li>✅ “修复登录页面的样式问题”</li>\n<li>✅ “优化数据库查询性能”</li>\n<li>❌ “修改”</li>\n<li>❌ “bug fix”</li>\n<li>❌ “更新”</li>\n</ul>\n<h3 id=\"4-查看提交历史-git-log\"><a href=\"#4-查看提交历史-git-log\" class=\"headerlink\" title=\"4. 查看提交历史 - git log\"></a>4. 查看提交历史 - git log</h3><p>查看提交历史：<code>git log</code><br>简洁模式：<code>git log --oneline</code><br>图形化显示分支：<code>git log --graph --oneline</code></p>\n<h3 id=\"5-查看差异-git-diff\"><a href=\"#5-查看差异-git-diff\" class=\"headerlink\" title=\"5. 查看差异 - git diff\"></a>5. 查看差异 - git diff</h3><p>查看工作目录和暂存区的差异：<code>git diff</code><br>查看暂存区和最后一次提交的差异：<code>git diff --cached</code><br>查看两个提交之间的差异：<code>git diff commit1 commit2</code></p>\n<h2 id=\"分支操作：掌握平行宇宙\"><a href=\"#分支操作：掌握平行宇宙\" class=\"headerlink\" title=\"分支操作：掌握平行宇宙\"></a>分支操作：掌握平行宇宙</h2><h3 id=\"创建和切换分支\"><a href=\"#创建和切换分支\" class=\"headerlink\" title=\"创建和切换分支\"></a>创建和切换分支</h3><p>查看所有分支：<code>git branch</code><br>创建新分支：<code>git branch feature-login</code><br>切换到新分支：<code>git checkout feature-login</code><br>创建并切换到新分支（一步到位）：<code>git checkout -b feature-login</code><br>新版Git的推荐方式：<code>git switch -c feature-login</code></p>\n<h3 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h3><p>切换到主分支：<code>git checkout main</code><br>合并feature-login分支：<code>git merge feature-login</code><br>删除已合并的分支：<code>git branch -d feature-login</code></p>\n<h3 id=\"分支策略\"><a href=\"#分支策略\" class=\"headerlink\" title=\"分支策略\"></a>分支策略</h3><p>在实际项目中，常见的分支策略：</p>\n<ul>\n<li><strong>main&#x2F;master</strong>：主分支，永远保持可发布状态</li>\n<li><strong>develop</strong>：开发分支，最新的开发进度</li>\n<li><strong>feature&#x2F;xxx</strong>：功能分支，开发新功能</li>\n<li><strong>hotfix&#x2F;xxx</strong>：热修复分支，紧急修复bug</li>\n</ul>\n<p><strong>分支命名最佳实践</strong><br>好的分支命名应该一目了然：</p>\n<ul>\n<li><code>feature/user-authentication</code> - 用户认证功能</li>\n<li><code>bugfix/login-error</code> - 修复登录错误</li>\n<li><code>hotfix/security-patch</code> - 安全补丁</li>\n<li><code>release/v1.2.0</code> - 发布版本1.2.0</li>\n</ul>\n<h2 id=\"远程仓库：连接更广阔的世界\"><a href=\"#远程仓库：连接更广阔的世界\" class=\"headerlink\" title=\"远程仓库：连接更广阔的世界\"></a>远程仓库：连接更广阔的世界</h2><h3 id=\"添加远程仓库\"><a href=\"#添加远程仓库\" class=\"headerlink\" title=\"添加远程仓库\"></a>添加远程仓库</h3><p>添加远程仓库：<code>git remote add origin https://github.com/用户名/仓库名.git</code><br>查看远程仓库：<code>git remote -v</code></p>\n<h3 id=\"推送到远程仓库\"><a href=\"#推送到远程仓库\" class=\"headerlink\" title=\"推送到远程仓库\"></a>推送到远程仓库</h3><p>第一次推送：<code>git push -u origin main</code><br>之后的推送：<code>git push</code></p>\n<h3 id=\"从远程仓库拉取\"><a href=\"#从远程仓库拉取\" class=\"headerlink\" title=\"从远程仓库拉取\"></a>从远程仓库拉取</h3><p>拉取并合并：<code>git pull</code><br>只拉取不合并：<code>git fetch</code></p>\n<p><strong>Pull vs Fetch 的区别</strong>：</p>\n<ul>\n<li><code>git pull</code> &#x3D; <code>git fetch</code> + <code>git merge</code></li>\n<li><code>git fetch</code> 只下载远程更改，不会自动合并</li>\n<li><code>git pull</code> 下载并自动合并到当前分支</li>\n<li>建议新手先用 <code>git fetch</code> 查看更改，再决定是否合并</li>\n</ul>\n<h2 id=\"实战案例：创建你的第一个项目\"><a href=\"#实战案例：创建你的第一个项目\" class=\"headerlink\" title=\"实战案例：创建你的第一个项目\"></a>实战案例：创建你的第一个项目</h2><p>让我们一步步创建一个简单的项目：</p>\n<h3 id=\"步骤1：创建项目\"><a href=\"#步骤1：创建项目\" class=\"headerlink\" title=\"步骤1：创建项目\"></a>步骤1：创建项目</h3><p>创建项目文件夹：<code>mkdir my-awesome-project</code><br>进入文件夹：<code>cd my-awesome-project</code><br>初始化Git仓库：<code>git init</code></p>\n<p>创建README文件：<code>echo &quot;# 我的第一个Git项目&quot; &gt; README.md</code></p>\n<p>创建一个简单的HTML文件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>我的第一个Git项目<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>欢迎来到我的项目！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>这是用Git管理的第一个项目。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步骤2：第一次提交\"><a href=\"#步骤2：第一次提交\" class=\"headerlink\" title=\"步骤2：第一次提交\"></a>步骤2：第一次提交</h3><p>查看状态：<code>git status</code><br>添加文件到暂存区：<code>git add .</code><br>提交：<code>git commit -m &quot;初始提交：添加README和index.html&quot;</code><br>查看提交历史：<code>git log --oneline</code></p>\n<h3 id=\"步骤3：创建功能分支\"><a href=\"#步骤3：创建功能分支\" class=\"headerlink\" title=\"步骤3：创建功能分支\"></a>步骤3：创建功能分支</h3><p>创建并切换到功能分支：<code>git checkout -b add-styles</code></p>\n<p>添加CSS样式文件：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* styles.css */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: Arial, sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">max-width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步骤4：提交更改\"><a href=\"#步骤4：提交更改\" class=\"headerlink\" title=\"步骤4：提交更改\"></a>步骤4：提交更改</h3><p>查看更改：<code>git diff</code><br>添加并提交：<code>git add .</code><br>提交：<code>git commit -m &quot;添加CSS样式文件&quot;</code></p>\n<h3 id=\"步骤5：合并分支\"><a href=\"#步骤5：合并分支\" class=\"headerlink\" title=\"步骤5：合并分支\"></a>步骤5：合并分支</h3><p>切换回主分支：<code>git checkout main</code><br>合并功能分支：<code>git merge add-styles</code><br>删除功能分支：<code>git branch -d add-styles</code><br>查看最终的提交历史：<code>git log --oneline --graph</code></p>\n<h2 id=\"常见问题和解决方案\"><a href=\"#常见问题和解决方案\" class=\"headerlink\" title=\"常见问题和解决方案\"></a>常见问题和解决方案</h2><h3 id=\"问题1：提交了错误的文件怎么办？\"><a href=\"#问题1：提交了错误的文件怎么办？\" class=\"headerlink\" title=\"问题1：提交了错误的文件怎么办？\"></a>问题1：提交了错误的文件怎么办？</h3><p>撤销最后一次提交，但保留更改：<code>git reset --soft HEAD~1</code><br>撤销最后一次提交，丢弃更改：<code>git reset --hard HEAD~1</code><br>修改最后一次提交消息：<code>git commit --amend -m &quot;新的提交消息&quot;</code></p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">危险操作警告</p>\n<p><code>git reset --hard</code> 会永久删除更改，使用前请三思！建议先用 <code>git stash</code> 保存当前工作。</p>\n</div>\n<h3 id=\"问题2：不小心删除了文件怎么办？\"><a href=\"#问题2：不小心删除了文件怎么办？\" class=\"headerlink\" title=\"问题2：不小心删除了文件怎么办？\"></a>问题2：不小心删除了文件怎么办？</h3><p>恢复工作目录中的文件：<code>git checkout -- 文件名</code><br>从特定提交恢复文件：<code>git checkout commit_id -- 文件名</code></p>\n<h3 id=\"问题3：合并冲突怎么解决？\"><a href=\"#问题3：合并冲突怎么解决？\" class=\"headerlink\" title=\"问题3：合并冲突怎么解决？\"></a>问题3：合并冲突怎么解决？</h3><p>当Git无法自动合并时，会产生冲突：</p>\n<p>查看冲突文件：<code>git status</code><br>手动编辑冲突文件，解决冲突后：<code>git add 冲突文件名</code><br>提交：<code>git commit -m &quot;解决合并冲突&quot;</code></p>\n<p>冲突文件的格式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">你的更改</span><br><span class=\"line\">=======</span><br><span class=\"line\">别人的更改</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 分支名</span><br></pre></td></tr></table></figure>\n\n<p><strong>解决冲突的技巧</strong></p>\n<ol>\n<li>仔细阅读冲突的代码，理解双方的意图</li>\n<li>保留最好的实现，或者结合两者的优点</li>\n<li>删除冲突标记（<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code>, <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>）</li>\n<li>测试代码确保正常工作</li>\n<li>提交解决方案</li>\n</ol>\n<h3 id=\"问题4：想要暂时保存工作进度？\"><a href=\"#问题4：想要暂时保存工作进度？\" class=\"headerlink\" title=\"问题4：想要暂时保存工作进度？\"></a>问题4：想要暂时保存工作进度？</h3><p>暂存当前工作：<code>git stash</code><br>查看暂存列表：<code>git stash list</code><br>恢复最新的暂存：<code>git stash pop</code><br>恢复特定的暂存：<code>git stash apply stash@&#123;0&#125;</code></p>\n<h2 id=\"Git最佳实践：成为Git高手的秘诀\"><a href=\"#Git最佳实践：成为Git高手的秘诀\" class=\"headerlink\" title=\"Git最佳实践：成为Git高手的秘诀\"></a>Git最佳实践：成为Git高手的秘诀</h2><h3 id=\"1-提交消息规范\"><a href=\"#1-提交消息规范\" class=\"headerlink\" title=\"1. 提交消息规范\"></a>1. 提交消息规范</h3><p>好的提交消息应该：</p>\n<ul>\n<li><strong>简洁明了</strong>：一行概括主要更改</li>\n<li><strong>使用现在时</strong>：”添加”而不是”添加了”</li>\n<li><strong>说明原因</strong>：不只是做了什么，还要说明为什么</li>\n</ul>\n<h3 id=\"2-分支命名规范\"><a href=\"#2-分支命名规范\" class=\"headerlink\" title=\"2. 分支命名规范\"></a>2. 分支命名规范</h3><p>功能分支：<code>feature/user-authentication</code>、<code>feature/shopping-cart</code><br>修复分支：<code>bugfix/login-error</code>、<code>hotfix/payment-issue</code><br>发布分支：<code>release/v1.2.0</code></p>\n<h3 id=\"3-经常提交，但不要提交半成品\"><a href=\"#3-经常提交，但不要提交半成品\" class=\"headerlink\" title=\"3. 经常提交，但不要提交半成品\"></a>3. 经常提交，但不要提交半成品</h3><ul>\n<li>每完成一个小功能就提交</li>\n<li>确保每次提交的代码都能运行</li>\n<li>避免提交调试代码或临时文件</li>\n</ul>\n<h3 id=\"4-使用-gitignore文件\"><a href=\"#4-使用-gitignore文件\" class=\"headerlink\" title=\"4. 使用.gitignore文件\"></a>4. 使用.gitignore文件</h3><p>创建<code>.gitignore</code>文件来忽略不需要版本控制的文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 依赖文件夹</span><br><span class=\"line\">node_modules/</span><br><span class=\"line\">vendor/</span><br><span class=\"line\"></span><br><span class=\"line\"># 编译文件</span><br><span class=\"line\">*.o</span><br><span class=\"line\">*.class</span><br><span class=\"line\">*.pyc</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置文件</span><br><span class=\"line\">.env</span><br><span class=\"line\">config.local.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 系统文件</span><br><span class=\"line\">.DS_Store</span><br><span class=\"line\">Thumbs.db</span><br><span class=\"line\"></span><br><span class=\"line\"># IDE文件</span><br><span class=\"line\">.vscode/</span><br><span class=\"line\">.idea/</span><br><span class=\"line\">*.swp</span><br></pre></td></tr></table></figure>\n\n<p><strong>.gitignore 使用技巧</strong>：</p>\n<ul>\n<li>可以使用通配符：<code>*.log</code> 忽略所有日志文件</li>\n<li>可以忽略整个目录：<code>logs/</code> </li>\n<li>可以添加例外：<code>!important.log</code> </li>\n<li>可以使用 gitignore.io 网站生成模板</li>\n</ul>\n<h2 id=\"进阶技巧：让你的Git技能更上一层楼\"><a href=\"#进阶技巧：让你的Git技能更上一层楼\" class=\"headerlink\" title=\"进阶技巧：让你的Git技能更上一层楼\"></a>进阶技巧：让你的Git技能更上一层楼</h2><h3 id=\"1-交互式暂存\"><a href=\"#1-交互式暂存\" class=\"headerlink\" title=\"1. 交互式暂存\"></a>1. 交互式暂存</h3><p>交互式添加文件：<code>git add -i</code><br>部分暂存文件：<code>git add -p</code></p>\n<h3 id=\"2-重写提交历史\"><a href=\"#2-重写提交历史\" class=\"headerlink\" title=\"2. 重写提交历史\"></a>2. 重写提交历史</h3><p>交互式重写最近3次提交：<code>git rebase -i HEAD~3</code><br>压缩多个提交为一个：在交互界面中使用squash</p>\n<h3 id=\"3-查找引入bug的提交\"><a href=\"#3-查找引入bug的提交\" class=\"headerlink\" title=\"3. 查找引入bug的提交\"></a>3. 查找引入bug的提交</h3><p>使用二分查找：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect start</span><br><span class=\"line\">git bisect bad  # 标记当前提交为坏的</span><br><span class=\"line\">git bisect good commit_id  # 标记某个提交为好的</span><br><span class=\"line\"># Git会自动帮你找到引入bug的提交</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-创建别名\"><a href=\"#4-创建别名\" class=\"headerlink\" title=\"4. 创建别名\"></a>4. 创建别名</h3><p>创建常用命令的别名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global alias.st status</span><br><span class=\"line\">git config --global alias.co checkout</span><br><span class=\"line\">git config --global alias.br branch</span><br><span class=\"line\">git config --global alias.ci commit</span><br><span class=\"line\">git config --global alias.lg &quot;log --oneline --graph&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"团队协作：Git在真实项目中的应用\"><a href=\"#团队协作：Git在真实项目中的应用\" class=\"headerlink\" title=\"团队协作：Git在真实项目中的应用\"></a>团队协作：Git在真实项目中的应用</h2><h3 id=\"1-Fork和Pull-Request工作流\"><a href=\"#1-Fork和Pull-Request工作流\" class=\"headerlink\" title=\"1. Fork和Pull Request工作流\"></a>1. Fork和Pull Request工作流</h3><p>这是开源项目最常用的协作方式：</p>\n<ol>\n<li><strong>Fork</strong>原仓库到你的账号下</li>\n<li><strong>Clone</strong>你的Fork到本地</li>\n<li>创建<strong>功能分支</strong>开发新功能</li>\n<li><strong>Push</strong>到你的Fork</li>\n<li>创建<strong>Pull Request</strong>请求合并</li>\n<li>代码审查和讨论</li>\n<li>合并到主仓库</li>\n</ol>\n<h3 id=\"2-Gitflow工作流\"><a href=\"#2-Gitflow工作流\" class=\"headerlink\" title=\"2. Gitflow工作流\"></a>2. Gitflow工作流</h3><p>适合有定期发布周期的项目：</p>\n<p>安装git-flow扩展后：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow init</span><br><span class=\"line\">git flow feature start new-feature</span><br><span class=\"line\">git flow feature finish new-feature</span><br><span class=\"line\">git flow release start v1.0.0</span><br><span class=\"line\">git flow release finish v1.0.0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-代码审查最佳实践\"><a href=\"#3-代码审查最佳实践\" class=\"headerlink\" title=\"3. 代码审查最佳实践\"></a>3. 代码审查最佳实践</h3><ul>\n<li><strong>小而频繁</strong>：小的PR更容易审查</li>\n<li><strong>描述清楚</strong>：说明更改的原因和影响</li>\n<li><strong>及时回应</strong>：快速响应审查意见</li>\n<li><strong>保持友善</strong>：建设性的反馈，相互学习</li>\n</ul>\n<h2 id=\"常用Git命令速查表\"><a href=\"#常用Git命令速查表\" class=\"headerlink\" title=\"常用Git命令速查表\"></a>常用Git命令速查表</h2><h3 id=\"基础操作\"><a href=\"#基础操作\" class=\"headerlink\" title=\"基础操作\"></a>基础操作</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                # 初始化仓库</span><br><span class=\"line\">git clone &lt;url&gt;         # 克隆仓库</span><br><span class=\"line\">git status              # 查看状态</span><br><span class=\"line\">git add &lt;file&gt;          # 添加文件</span><br><span class=\"line\">git commit -m &quot;msg&quot;     # 提交更改</span><br><span class=\"line\">git push                # 推送到远程</span><br><span class=\"line\">git pull                # 拉取并合并</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch              # 查看分支</span><br><span class=\"line\">git branch &lt;name&gt;       # 创建分支</span><br><span class=\"line\">git checkout &lt;name&gt;     # 切换分支</span><br><span class=\"line\">git checkout -b &lt;name&gt;  # 创建并切换分支</span><br><span class=\"line\">git merge &lt;branch&gt;      # 合并分支</span><br><span class=\"line\">git branch -d &lt;name&gt;    # 删除分支</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"历史查看\"><a href=\"#历史查看\" class=\"headerlink\" title=\"历史查看\"></a>历史查看</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log                 # 查看提交历史</span><br><span class=\"line\">git log --oneline       # 简洁模式</span><br><span class=\"line\">git log --graph         # 图形化显示</span><br><span class=\"line\">git diff                # 查看差异</span><br><span class=\"line\">git show &lt;commit&gt;       # 查看特定提交</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"撤销操作\"><a href=\"#撤销操作\" class=\"headerlink\" title=\"撤销操作\"></a>撤销操作</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --soft HEAD~1    # 撤销提交，保留更改</span><br><span class=\"line\">git reset --hard HEAD~1    # 撤销提交，丢弃更改</span><br><span class=\"line\">git checkout -- &lt;file&gt;     # 撤销工作目录更改</span><br><span class=\"line\">git revert &lt;commit&gt;        # 创建反向提交</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"写在最后：我的Git学习心路历程\"><a href=\"#写在最后：我的Git学习心路历程\" class=\"headerlink\" title=\"写在最后：我的Git学习心路历程\"></a>写在最后：我的Git学习心路历程</h2><p>回想起我第一次接触Git的时候，那种感觉就像是在学习一门外语——到处都是奇怪的术语，命令行看起来很吓人，总是担心搞砸什么重要的东西。</p>\n<p>但是，当我真正开始使用Git管理我的项目后，我发现了一个全新的世界：</p>\n<ul>\n<li><strong>再也不用担心丢失代码</strong>：每次提交都是一个安全的快照</li>\n<li><strong>可以大胆尝试新功能</strong>：分支让实验变得安全</li>\n<li><strong>团队协作变得简单</strong>：每个人都可以并行工作，最后合并</li>\n<li><strong>历史记录一目了然</strong>：什么时候改了什么，一清二楚</li>\n</ul>\n<p>现在，Git已经成为我日常工作中不可或缺的工具。不仅仅是写代码，我甚至用Git来管理我的博客文章、学习笔记，甚至是这篇教程！</p>\n<h2 id=\"给新手的鼓励\"><a href=\"#给新手的鼓励\" class=\"headerlink\" title=\"给新手的鼓励\"></a>给新手的鼓励</h2><p>如果你是第一次学习Git，我想对你说：</p>\n<ol>\n<li><strong>不要害怕犯错</strong> 🌟：Git的设计就是为了让你可以安全地犯错和恢复</li>\n<li><strong>从简单开始</strong> 🚀：先掌握基本的add、commit、push，其他的慢慢来</li>\n<li><strong>多练习</strong> 💪：理论再多不如动手实践，创建一个测试项目练练手</li>\n<li><strong>加入社区</strong> 👥：GitHub、GitLab上有无数的开源项目，看看别人是怎么用Git的</li>\n<li><strong>保持耐心</strong> ⏰：Git的学习曲线可能有点陡，但一旦掌握，你会感谢自己的坚持</li>\n</ol>\n<hr>\n<p><em>版本控制不只是技术，更是一种思维方式。Git改变了我们管理代码和协作的方式，掌握它将为你的编程之路带来巨大帮助！</em> 🚀</p>\n","feature":true,"text":"还记得第一次听说Git的时候吗？那种感觉就像听到一门外语——满是奇怪的术语，命令行看起来很吓人。但Git实际上是个超级实用的工具，它就像是你项目的\"时光机\" + \"平行宇宙管理器\"！这篇文章将用最接地气的方式，带你走进Git的世界。...","permalink":"/post/Git入门","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"基础操作","slug":"基础操作","count":2,"path":"api/categories/基础操作.json"}],"tags":[{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"},{"name":"版本控制","slug":"版本控制","count":1,"path":"api/tags/版本控制.json"},{"name":"教程","slug":"教程","count":2,"path":"api/tags/教程.json"},{"name":"开发工具","slug":"开发工具","count":1,"path":"api/tags/开发工具.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%98%BF%EF%BC%8C%E5%87%86%E5%A4%87%E5%A5%BD%E5%92%8CGit%E4%BA%A4%E6%9C%8B%E5%8F%8B%E4%BA%86%E5%90%97%EF%BC%9F\"><span class=\"toc-text\">嘿，准备好和Git交朋友了吗？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFGit%EF%BC%9F%E4%B8%80%E4%B8%AA%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C%E7%9A%84%E6%95%85%E4%BA%8B\"><span class=\"toc-text\">什么是Git？一个改变世界的故事</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E7%83%A6%E6%81%BC%E8%AF%B4%E8%B5%B7\"><span class=\"toc-text\">从一个程序员的烦恼说起</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Git%E7%9A%84%E8%AF%9E%E7%94%9F%EF%BC%9ALinus%E7%9A%84%E7%A5%9E%E6%9D%A5%E4%B9%8B%E7%AC%94\"><span class=\"toc-text\">Git的诞生：Linus的神来之笔</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Git%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">Git到底是什么？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6Git%EF%BC%9F%E8%AE%A9%E6%95%B0%E6%8D%AE%E8%AF%B4%E8%AF%9D\"><span class=\"toc-text\">为什么要学Git？让数据说话</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%EF%BC%9A%E5%85%88%E6%90%9E%E6%87%82%E8%BF%99%E4%BA%9B%E2%80%9D%E9%BB%91%E8%AF%9D%E2%80%9D\"><span class=\"toc-text\">Git基础概念：先搞懂这些”黑话”</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%93%E5%BA%93%EF%BC%88Repository%EF%BC%89-%E4%BD%A0%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%A4%A7%E6%9C%AC%E8%90%A5\"><span class=\"toc-text\">仓库（Repository）- 你的项目大本营</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8F%90%E4%BA%A4%EF%BC%88Commit%EF%BC%89-%E7%BB%99%E9%A1%B9%E7%9B%AE%E6%8B%8D%E5%BF%AB%E7%85%A7\"><span class=\"toc-text\">提交（Commit）- 给项目拍快照</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF%EF%BC%88Branch%EF%BC%89-%E5%B9%B3%E8%A1%8C%E5%AE%87%E5%AE%99\"><span class=\"toc-text\">分支（Branch）- 平行宇宙</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%88%E5%B9%B6%EF%BC%88Merge%EF%BC%89-%E5%B9%B3%E8%A1%8C%E5%AE%87%E5%AE%99%E7%9A%84%E8%9E%8D%E5%90%88\"><span class=\"toc-text\">合并（Merge）- 平行宇宙的融合</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git%E5%AE%89%E8%A3%85%EF%BC%9A%E8%AE%A9%E6%88%91%E4%BB%AC%E5%BC%80%E5%A7%8B%E8%BF%99%E5%9C%BA%E5%86%92%E9%99%A9\"><span class=\"toc-text\">Git安装：让我们开始这场冒险</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Windows%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">Windows用户</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mac%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">Mac用户</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">Linux用户</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">验证安装</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%85%8D%E7%BD%AE%EF%BC%9A%E5%91%8A%E8%AF%89Git%E4%BD%A0%E6%98%AF%E8%B0%81\"><span class=\"toc-text\">第一次配置：告诉Git你是谁</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAGit%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">创建你的第一个Git仓库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B\"><span class=\"toc-text\">方法一：从零开始</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9A%E5%85%8B%E9%9A%86%E7%8E%B0%E6%9C%89%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">方法二：克隆现有仓库</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git%E5%B7%A5%E4%BD%9C%E6%B5%81%EF%BC%9A%E7%90%86%E8%A7%A3%E8%BF%99%E4%B8%AA%E5%BE%88%E9%87%8D%E8%A6%81%EF%BC%81\"><span class=\"toc-text\">Git工作流：理解这个很重要！</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%9AGit%E7%9A%84%E2%80%9D%E4%B9%9D%E9%98%B3%E7%A5%9E%E5%8A%9F%E2%80%9D\"><span class=\"toc-text\">基本操作：Git的”九阳神功”</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9F%A5%E7%9C%8B%E7%8A%B6%E6%80%81-git-status\"><span class=\"toc-text\">1. 查看状态 - git status</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6%E5%88%B0%E6%9A%82%E5%AD%98%E5%8C%BA-git-add\"><span class=\"toc-text\">2. 添加文件到暂存区 - git add</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8F%90%E4%BA%A4%E6%9B%B4%E6%94%B9-git-commit\"><span class=\"toc-text\">3. 提交更改 - git commit</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2-git-log\"><span class=\"toc-text\">4. 查看提交历史 - git log</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%9F%A5%E7%9C%8B%E5%B7%AE%E5%BC%82-git-diff\"><span class=\"toc-text\">5. 查看差异 - git diff</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C%EF%BC%9A%E6%8E%8C%E6%8F%A1%E5%B9%B3%E8%A1%8C%E5%AE%87%E5%AE%99\"><span class=\"toc-text\">分支操作：掌握平行宇宙</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%87%E6%8D%A2%E5%88%86%E6%94%AF\"><span class=\"toc-text\">创建和切换分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF\"><span class=\"toc-text\">合并分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">分支策略</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%EF%BC%9A%E8%BF%9E%E6%8E%A5%E6%9B%B4%E5%B9%BF%E9%98%94%E7%9A%84%E4%B8%96%E7%95%8C\"><span class=\"toc-text\">远程仓库：连接更广阔的世界</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">添加远程仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">推送到远程仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E6%8B%89%E5%8F%96\"><span class=\"toc-text\">从远程仓库拉取</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%88%9B%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">实战案例：创建你的第一个项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A41%EF%BC%9A%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">步骤1：创建项目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A42%EF%BC%9A%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">步骤2：第一次提交</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A43%EF%BC%9A%E5%88%9B%E5%BB%BA%E5%8A%9F%E8%83%BD%E5%88%86%E6%94%AF\"><span class=\"toc-text\">步骤3：创建功能分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A44%EF%BC%9A%E6%8F%90%E4%BA%A4%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">步骤4：提交更改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A45%EF%BC%9A%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF\"><span class=\"toc-text\">步骤5：合并分支</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">常见问题和解决方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%981%EF%BC%9A%E6%8F%90%E4%BA%A4%E4%BA%86%E9%94%99%E8%AF%AF%E7%9A%84%E6%96%87%E4%BB%B6%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F\"><span class=\"toc-text\">问题1：提交了错误的文件怎么办？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%982%EF%BC%9A%E4%B8%8D%E5%B0%8F%E5%BF%83%E5%88%A0%E9%99%A4%E4%BA%86%E6%96%87%E4%BB%B6%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F\"><span class=\"toc-text\">问题2：不小心删除了文件怎么办？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%983%EF%BC%9A%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%EF%BC%9F\"><span class=\"toc-text\">问题3：合并冲突怎么解决？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%984%EF%BC%9A%E6%83%B3%E8%A6%81%E6%9A%82%E6%97%B6%E4%BF%9D%E5%AD%98%E5%B7%A5%E4%BD%9C%E8%BF%9B%E5%BA%A6%EF%BC%9F\"><span class=\"toc-text\">问题4：想要暂时保存工作进度？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%EF%BC%9A%E6%88%90%E4%B8%BAGit%E9%AB%98%E6%89%8B%E7%9A%84%E7%A7%98%E8%AF%80\"><span class=\"toc-text\">Git最佳实践：成为Git高手的秘诀</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%8F%90%E4%BA%A4%E6%B6%88%E6%81%AF%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">1. 提交消息规范</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%86%E6%94%AF%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">2. 分支命名规范</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%BB%8F%E5%B8%B8%E6%8F%90%E4%BA%A4%EF%BC%8C%E4%BD%86%E4%B8%8D%E8%A6%81%E6%8F%90%E4%BA%A4%E5%8D%8A%E6%88%90%E5%93%81\"><span class=\"toc-text\">3. 经常提交，但不要提交半成品</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E4%BD%BF%E7%94%A8-gitignore%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">4. 使用.gitignore文件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E9%98%B6%E6%8A%80%E5%B7%A7%EF%BC%9A%E8%AE%A9%E4%BD%A0%E7%9A%84Git%E6%8A%80%E8%83%BD%E6%9B%B4%E4%B8%8A%E4%B8%80%E5%B1%82%E6%A5%BC\"><span class=\"toc-text\">进阶技巧：让你的Git技能更上一层楼</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9A%82%E5%AD%98\"><span class=\"toc-text\">1. 交互式暂存</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%87%8D%E5%86%99%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2\"><span class=\"toc-text\">2. 重写提交历史</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%9F%A5%E6%89%BE%E5%BC%95%E5%85%A5bug%E7%9A%84%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">3. 查找引入bug的提交</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%88%9B%E5%BB%BA%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">4. 创建别名</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C%EF%BC%9AGit%E5%9C%A8%E7%9C%9F%E5%AE%9E%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">团队协作：Git在真实项目中的应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Fork%E5%92%8CPull-Request%E5%B7%A5%E4%BD%9C%E6%B5%81\"><span class=\"toc-text\">1. Fork和Pull Request工作流</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Gitflow%E5%B7%A5%E4%BD%9C%E6%B5%81\"><span class=\"toc-text\">2. Gitflow工作流</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">3. 代码审查最佳实践</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8Git%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8\"><span class=\"toc-text\">常用Git命令速查表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">基础操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">分支操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%86%E5%8F%B2%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">历史查看</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%92%A4%E9%94%80%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">撤销操作</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E%EF%BC%9A%E6%88%91%E7%9A%84Git%E5%AD%A6%E4%B9%A0%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B\"><span class=\"toc-text\">写在最后：我的Git学习心路历程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%99%E6%96%B0%E6%89%8B%E7%9A%84%E9%BC%93%E5%8A%B1\"><span class=\"toc-text\">给新手的鼓励</span></a></li></ol></li></ol>","author":{"name":"Raymond Deng","slug":"blog-author","avatar":"/img/avatar.jpeg","link":"/","description":"探索技术与艺术的交汇处","socials":{"github":"https://github.com/Ramond-e","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Markdown语法详解：从小白到大神的进阶之路","uid":"a5cddc6fea85c76ee5b07078e91a34c6","slug":"Markdown语法详解","date":"2025-08-28T02:00:00.000Z","updated":"2025-08-29T12:39:58.194Z","comments":true,"path":"api/articles/Markdown语法详解.json","keywords":null,"cover":"/img/blog_covers/basic_tech.jpg","text":"Markdown是一种轻量级标记语言，让你用简单的符号就能写出格式化的文档。它的设计哲学是让你专注于内容而不是格式，就像写作界的\"瑞士军刀\"——简单、优雅、功能强大！这篇文章将详细介绍Markdown的语法和使用方法。...","permalink":"/post/Markdown语法详解","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"基础操作","slug":"基础操作","count":2,"path":"api/categories/基础操作.json"}],"tags":[{"name":"教程","slug":"教程","count":2,"path":"api/tags/教程.json"},{"name":"Markdown","slug":"Markdown","count":1,"path":"api/tags/Markdown.json"},{"name":"写作工具","slug":"写作工具","count":1,"path":"api/tags/写作工具.json"}],"author":{"name":"Raymond Deng","slug":"blog-author","avatar":"/img/avatar.jpeg","link":"/","description":"探索技术与艺术的交汇处","socials":{"github":"https://github.com/Ramond-e","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2025-08-27T12:48:16.007Z","updated":"2025-08-27T12:53:15.803Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"欢迎各位参观我的个人博客！很高兴您能访问我的个人空间。这里是我分享技术见解、生活感悟和个人兴趣的地方。 关于本站本站使用 Hexo 搭建，采用 Aurora 主...","permalink":"/post/hello-world","photos":[],"count_time":{"symbolsCount":246,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Raymond Deng","slug":"blog-author","avatar":"/img/avatar.jpeg","link":"/","description":"探索技术与艺术的交汇处","socials":{"github":"https://github.com/Ramond-e","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}